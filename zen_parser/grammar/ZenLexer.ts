// Generated from ./grammar/Zen.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class ZenLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly T__5 = 6;
	public static readonly T__6 = 7;
	public static readonly MeshAndBsp = 8;
	public static readonly Whitespace = 9;
	public static readonly Newline = 10;
	public static readonly Int = 11;
	public static readonly Date = 12;
	public static readonly Time = 13;
	public static readonly Value = 14;
	public static readonly Name = 15;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "MeshAndBsp", 
		"Whitespace", "Newline", "Int", "Date", "Time", "Value", "Name", "Latin1Supplement", 
		"LatinExtendedA", "LatinExtendedB", "Cyrillic", "CyrillicSupplement", 
		"Letter", "Digit", "FirstChar", "NextChar", "Type",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'['", "']'", "'[]'", "'%'", "':'", "'\u00A7'", "'='",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, undefined, 
		undefined, "MeshAndBsp", "Whitespace", "Newline", "Int", "Date", "Time", 
		"Value", "Name",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(ZenLexer._LITERAL_NAMES, ZenLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return ZenLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(ZenLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Zen.g4"; }

	// @Override
	public get ruleNames(): string[] { return ZenLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return ZenLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return ZenLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return ZenLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x11\xF6\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x03\x02\x03\x02\x03\x03" +
		"\x03\x03\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03\x06\x03\x06\x03\x07" +
		"\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x07" +
		"\tY\n\t\f\t\x0E\t\\\v\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03" +
		"\n\x06\nf\n\n\r\n\x0E\ng\x03\n\x03\n\x03\v\x03\v\x05\vn\n\v\x03\v\x05" +
		"\vq\n\v\x03\v\x03\v\x03\f\x05\fv\n\f\x03\f\x06\fy\n\f\r\f\x0E\fz\x03\r" +
		"\x03\r\x05\r\x7F\n\r\x03\r\x03\r\x03\r\x05\r\x84\n\r\x03\r\x03\r\x03\r" +
		"\x05\r\x89\n\r\x03\r\x05\r\x8C\n\r\x03\r\x05\r\x8F\n\r\x03\x0E\x03\x0E" +
		"\x05\x0E\x93\n\x0E\x03\x0E\x03\x0E\x03\x0E\x05\x0E\x98\n\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x05\x0E\x9D\n\x0E\x03\x0F\x03\x0F\x03\x0F\x07\x0F\xA2\n\x0F" +
		"\f\x0F\x0E\x0F\xA5\v\x0F\x03\x10\x03\x10\x07\x10\xA9\n\x10\f\x10\x0E\x10" +
		"\xAC\v\x10\x03\x11\x03\x11\x03\x12\x03\x12\x03\x13\x03\x13\x03\x14\x03" +
		"\x14\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x05" +
		"\x16\xBE\n\x16\x03\x17\x03\x17\x03\x18\x03\x18\x05\x18\xC4\n\x18\x03\x19" +
		"\x03\x19\x03\x19\x05\x19\xC9\n\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03" +
		"\x1A\x03\x1A\x05\x1A\xF5\n\x1A\x03Z\x02\x02\x1B\x03\x02\x03\x05\x02\x04" +
		"\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v" +
		"\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!" +
		"\x02\x02#\x02\x02%\x02\x02\'\x02\x02)\x02\x02+\x02\x02-\x02\x02/\x02\x02" +
		"1\x02\x023\x02\x02\x03\x02\f\x04\x02\v\v\"\"\x03\x02\f\f\x03\x02\x82\u0101" +
		"\x03\x02\u0102\u0181\x03\x02\u0182\u0251\x03\x02\u0402\u0501\x03\x02\u0502" +
		"\u0531\x04\x02C\\c|\x03\x022;\x04\x02/0^^\x02\u010B\x02\x03\x03\x02\x02" +
		"\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02" +
		"\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02" +
		"\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02" +
		"\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02" +
		"\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02\x02\x02\x035\x03\x02\x02\x02" +
		"\x057\x03\x02\x02\x02\x079\x03\x02\x02\x02\t<\x03\x02\x02\x02\v>\x03\x02" +
		"\x02\x02\r@\x03\x02\x02\x02\x0FB\x03\x02\x02\x02\x11D\x03\x02\x02\x02" +
		"\x13e\x03\x02\x02\x02\x15p\x03\x02\x02\x02\x17u\x03\x02\x02\x02\x19|\x03" +
		"\x02\x02\x02\x1B\x90\x03\x02\x02\x02\x1D\x9E\x03\x02\x02\x02\x1F\xA6\x03" +
		"\x02\x02\x02!\xAD\x03\x02\x02\x02#\xAF\x03\x02\x02\x02%\xB1\x03\x02\x02" +
		"\x02\'\xB3\x03\x02\x02\x02)\xB5\x03\x02\x02\x02+\xBD\x03\x02\x02\x02-" +
		"\xBF\x03\x02\x02\x02/\xC3\x03\x02\x02\x021\xC8\x03\x02\x02\x023\xF4\x03" +
		"\x02\x02\x0256\x07]\x02\x026\x04\x03\x02\x02\x0278\x07_\x02\x028\x06\x03" +
		"\x02\x02\x029:\x07]\x02\x02:;\x07_\x02\x02;\b\x03\x02\x02\x02<=\x07\'" +
		"\x02\x02=\n\x03\x02\x02\x02>?\x07<\x02\x02?\f\x03\x02\x02\x02@A\x07\xA9" +
		"\x02\x02A\x0E\x03\x02\x02\x02BC\x07?\x02\x02C\x10\x03\x02\x02\x02DE\x07" +
		"]\x02\x02EF\x07O\x02\x02FG\x07g\x02\x02GH\x07u\x02\x02HI\x07j\x02\x02" +
		"IJ\x07C\x02\x02JK\x07p\x02\x02KL\x07f\x02\x02LM\x07D\x02\x02MN\x07u\x02" +
		"\x02NO\x07r\x02\x02OP\x07\"\x02\x02PQ\x07\'\x02\x02QR\x07\"\x02\x02RS" +
		"\x072\x02\x02ST\x07\"\x02\x02TU\x072\x02\x02UV\x07_\x02\x02VZ\x03\x02" +
		"\x02\x02WY\v\x02\x02\x02XW\x03\x02\x02\x02Y\\\x03\x02\x02\x02Z[\x03\x02" +
		"\x02\x02ZX\x03\x02\x02\x02[]\x03\x02\x02\x02\\Z\x03\x02\x02\x02]^\x07" +
		"]\x02\x02^_\x07_\x02\x02_`\x07\f\x02\x02`a\x07\v\x02\x02ab\x03\x02\x02" +
		"\x02bc\b\t\x02\x02c\x12\x03\x02\x02\x02df\t\x02\x02\x02ed\x03\x02\x02" +
		"\x02fg\x03\x02\x02\x02ge\x03\x02\x02\x02gh\x03\x02\x02\x02hi\x03\x02\x02" +
		"\x02ij\b\n\x02\x02j\x14\x03\x02\x02\x02km\x07\x0F\x02\x02ln\x07\f\x02" +
		"\x02ml\x03\x02\x02\x02mn\x03\x02\x02\x02nq\x03\x02\x02\x02oq\x07\f\x02" +
		"\x02pk\x03\x02\x02\x02po\x03\x02\x02\x02qr\x03\x02\x02\x02rs\b\v\x02\x02" +
		"s\x16\x03\x02\x02\x02tv\x07/\x02\x02ut\x03\x02\x02\x02uv\x03\x02\x02\x02" +
		"vx\x03\x02\x02\x02wy\x05-\x17\x02xw\x03\x02\x02\x02yz\x03\x02\x02\x02" +
		"zx\x03\x02\x02\x02z{\x03\x02\x02\x02{\x18\x03\x02\x02\x02|~\x05-\x17\x02" +
		"}\x7F\x05-\x17\x02~}\x03\x02\x02\x02~\x7F\x03\x02\x02\x02\x7F\x80\x03" +
		"\x02\x02\x02\x80\x81\x070\x02\x02\x81\x83\x05-\x17\x02\x82\x84\x05-\x17" +
		"\x02\x83\x82\x03\x02\x02\x02\x83\x84\x03\x02\x02\x02\x84\x85\x03\x02\x02" +
		"\x02\x85\x86\x070\x02\x02\x86\x88\x05-\x17\x02\x87\x89\x05-\x17\x02\x88" +
		"\x87\x03\x02\x02\x02\x88\x89\x03\x02\x02\x02\x89\x8B\x03\x02\x02\x02\x8A" +
		"\x8C\x05-\x17\x02\x8B\x8A\x03\x02\x02\x02\x8B\x8C\x03\x02\x02\x02\x8C" +
		"\x8E\x03\x02\x02\x02\x8D\x8F\x05-\x17\x02\x8E\x8D\x03\x02\x02\x02\x8E" +
		"\x8F\x03\x02\x02\x02\x8F\x1A\x03\x02\x02\x02\x90\x92\x05-\x17\x02\x91" +
		"\x93\x05-\x17\x02\x92\x91\x03\x02\x02\x02\x92\x93\x03\x02\x02\x02\x93" +
		"\x94\x03\x02\x02\x02\x94\x95\x07<\x02\x02\x95\x97\x05-\x17\x02\x96\x98" +
		"\x05-\x17\x02\x97\x96\x03\x02\x02\x02\x97\x98\x03\x02\x02\x02\x98\x99" +
		"\x03\x02\x02\x02\x99\x9A\x07<\x02\x02\x9A\x9C\x05-\x17\x02\x9B\x9D\x05" +
		"-\x17\x02\x9C\x9B\x03\x02\x02\x02\x9C\x9D\x03\x02\x02\x02\x9D\x1C\x03" +
		"\x02\x02\x02\x9E\x9F\x053\x1A\x02\x9F\xA3\x07<\x02\x02\xA0\xA2\n\x03\x02" +
		"\x02\xA1\xA0\x03\x02\x02\x02\xA2\xA5\x03\x02\x02\x02\xA3\xA1\x03\x02\x02" +
		"\x02\xA3\xA4\x03\x02\x02\x02\xA4\x1E\x03\x02\x02\x02\xA5\xA3\x03\x02\x02" +
		"\x02\xA6\xAA\x05/\x18\x02\xA7\xA9\x051\x19\x02\xA8\xA7\x03\x02\x02\x02" +
		"\xA9\xAC\x03\x02\x02\x02\xAA\xA8\x03\x02\x02\x02\xAA\xAB\x03\x02\x02\x02" +
		"\xAB \x03\x02\x02\x02\xAC\xAA\x03\x02\x02\x02\xAD\xAE\t\x04\x02\x02\xAE" +
		"\"\x03\x02\x02\x02\xAF\xB0\t\x05\x02\x02\xB0$\x03\x02\x02\x02\xB1\xB2" +
		"\t\x06\x02\x02\xB2&\x03\x02\x02\x02\xB3\xB4\t\x07\x02\x02\xB4(\x03\x02" +
		"\x02\x02\xB5\xB6\t\b\x02\x02\xB6*\x03\x02\x02\x02\xB7\xBE\t\t\x02\x02" +
		"\xB8\xBE\x05!\x11\x02\xB9\xBE\x05#\x12\x02\xBA\xBE\x05%\x13\x02\xBB\xBE" +
		"\x05\'\x14\x02\xBC\xBE\x05)\x15\x02\xBD\xB7\x03\x02\x02\x02\xBD\xB8\x03" +
		"\x02\x02\x02\xBD\xB9\x03\x02\x02\x02\xBD\xBA\x03\x02\x02\x02\xBD\xBB\x03" +
		"\x02\x02\x02\xBD\xBC\x03\x02\x02\x02\xBE,\x03\x02\x02\x02\xBF\xC0\t\n" +
		"\x02\x02\xC0.\x03\x02\x02\x02\xC1\xC4\x05+\x16\x02\xC2\xC4\x07a\x02\x02" +
		"\xC3\xC1\x03\x02\x02\x02\xC3\xC2\x03\x02\x02\x02\xC40\x03\x02\x02\x02" +
		"\xC5\xC9\x05/\x18\x02\xC6\xC9\x05-\x17\x02\xC7\xC9\t\v\x02\x02\xC8\xC5" +
		"\x03\x02\x02\x02\xC8\xC6\x03\x02\x02\x02\xC8\xC7\x03\x02\x02\x02\xC92" +
		"\x03\x02\x02\x02\xCA\xCB\x07d\x02\x02\xCB\xCC\x07q\x02\x02\xCC\xCD\x07" +
		"q\x02\x02\xCD\xF5\x07n\x02\x02\xCE\xCF\x07e\x02\x02\xCF\xD0\x07q\x02\x02" +
		"\xD0\xD1\x07n\x02\x02\xD1\xD2\x07q\x02\x02\xD2\xF5\x07t\x02\x02\xD3\xD4" +
		"\x07g\x02\x02\xD4\xD5\x07p\x02\x02\xD5\xD6\x07w\x02\x02\xD6\xF5\x07o\x02" +
		"\x02\xD7\xD8\x07h\x02\x02\xD8\xD9\x07n\x02\x02\xD9\xDA\x07q\x02\x02\xDA" +
		"\xDB\x07c\x02\x02\xDB\xF5\x07v\x02\x02\xDC\xDD\x07k\x02\x02\xDD\xDE\x07" +
		"p\x02\x02\xDE\xF5\x07v\x02\x02\xDF\xE0\x07t\x02\x02\xE0\xE1\x07c\x02\x02" +
		"\xE1\xF5\x07y\x02\x02\xE2\xE3\x07t\x02\x02\xE3\xE4\x07c\x02\x02\xE4\xE5" +
		"\x07y\x02\x02\xE5\xE6\x07H\x02\x02\xE6\xE7\x07n\x02\x02\xE7\xE8\x07q\x02" +
		"\x02\xE8\xE9\x07c\x02\x02\xE9\xF5\x07v\x02\x02\xEA\xEB\x07u\x02\x02\xEB" +
		"\xEC\x07v\x02\x02\xEC\xED\x07t\x02\x02\xED\xEE\x07k\x02\x02\xEE\xEF\x07" +
		"p\x02\x02\xEF\xF5\x07i\x02\x02\xF0\xF1\x07x\x02\x02\xF1\xF2\x07g\x02\x02" +
		"\xF2\xF3\x07e\x02\x02\xF3\xF5\x075\x02\x02\xF4\xCA\x03\x02\x02\x02\xF4" +
		"\xCE\x03\x02\x02\x02\xF4\xD3\x03\x02\x02\x02\xF4\xD7\x03\x02\x02\x02\xF4" +
		"\xDC\x03\x02\x02\x02\xF4\xDF\x03\x02\x02\x02\xF4\xE2\x03\x02\x02\x02\xF4" +
		"\xEA\x03\x02\x02\x02\xF4\xF0\x03\x02\x02\x02\xF54\x03\x02\x02\x02\x17" +
		"\x02Zgmpuz~\x83\x88\x8B\x8E\x92\x97\x9C\xA3\xAA\xBD\xC3\xC8\xF4\x03\b" +
		"\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!ZenLexer.__ATN) {
			ZenLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(ZenLexer._serializedATN));
		}

		return ZenLexer.__ATN;
	}

}

